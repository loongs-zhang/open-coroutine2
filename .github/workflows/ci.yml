name: Build & Test

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.target == 'i686-pc-windows-gnu' && format('{0}-i686-pc-windows-gnu', matrix.channel) || matrix.channel }}
          target: ${{ matrix.target }}
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - env:
          CHANNEL: ${{ matrix.channel }}
          CROSS: ${{ !startsWith(matrix.target, 'x86_64') && contains(matrix.target, 'linux') && '1' || '0' }}
          TARGET: ${{ matrix.target }}
          OS: ${{ matrix.os }}
          PROJECT_DIR: ${{ github.workspace }}
        run: sh .github/workflows/ci.sh
      - name: Run cargo release socket not coroutine with io_uring example
        if: always()
        run: |
          cd ${{ github.workspace }}/examples
          sudo bash -c "sudo -u runner RUSTUP_TOOLCHAIN=${{ matrix.rust }} RUST_BACKTRACE=1 /home/runner/.cargo/bin/cargo run --example socket_not_co --release"
      - name: Run cargo release socket coroutine server with io_uring example
        if: always()
        run: |
          cd ${{ github.workspace }}/examples
          sudo bash -c "sudo -u runner RUSTUP_TOOLCHAIN=${{ matrix.rust }} RUST_BACKTRACE=1 /home/runner/.cargo/bin/cargo run --example socket_co_server --release"
      - name: Run cargo release socket coroutine client with io_uring example
        if: always()
        run: |
          cd ${{ github.workspace }}/examples
          sudo bash -c "sudo -u runner RUSTUP_TOOLCHAIN=${{ matrix.rust }} RUST_BACKTRACE=1 /home/runner/.cargo/bin/cargo run --example socket_co_client --release"
      - name: Run cargo release socket coroutine with io_uring example
        if: always()
        run: |
          cd ${{ github.workspace }}/examples
          sudo bash -c "sudo -u runner RUSTUP_TOOLCHAIN=${{ matrix.rust }} RUST_BACKTRACE=1 /home/runner/.cargo/bin/cargo run --example socket_co --release"

    strategy:
      fail-fast: false
      matrix:
        target: [
          x86_64-unknown-linux-gnu,
          i686-unknown-linux-gnu,
          aarch64-unknown-linux-gnu,
          armv7-unknown-linux-gnueabihf,
          riscv64gc-unknown-linux-gnu,
#          mips64-unknown-linux-muslabi64,
#          loongarch64-unknown-linux-gnu,
#          s390x-unknown-linux-gnu,

          x86_64-apple-darwin,
#          aarch64-apple-darwin,

          x86_64-pc-windows-gnu,
          x86_64-pc-windows-msvc,
          i686-pc-windows-gnu,
          i686-pc-windows-msvc,
        ]
        channel: [stable, nightly]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: i686-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target: riscv64gc-unknown-linux-gnu
            os: ubuntu-latest
#          - target: mips64-unknown-linux-muslabi64
#            os: ubuntu-latest
#          - target: loongarch64-unknown-linux-gnu
#            os: ubuntu-latest
#          - target: s390x-unknown-linux-gnu
#            os: ubuntu-latest

          - target: x86_64-apple-darwin
            os: macos-latest
#          - target: aarch64-apple-darwin
#            os: macos-latest

          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
          - target: i686-pc-windows-gnu
            os: windows-latest
